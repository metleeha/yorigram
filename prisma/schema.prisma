// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = "file:./dev.db"
  // url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  //binaryTargets = ["rhel-openssl-1.0.x"] # AWS
  //binaryTargets = ["native"]
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  email         String    @unique
  firstName     String    @default("")
  lastName      String    @default("")
  bio           String    @default("")
  followers     User[]    @relation("UserFollows", references: [id])
  following     User[]    @relation("UserFollows", references: [id])
  posts         Post[]
  likes         Like[]
  comments      Comment[]
  rooms         Room[]
  messagesFrom  Message[] @relation("MessageFrom")
  messagesTo    Message[] @relation("MessageTo")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Post {
  id          Int       @id @default(autoincrement())
  user        User    @relation(fields:[userId], references: [id])
  userId      Int
  location    String
  caption     String
  files       File[]
  likes       Like[]
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Like {
  id      Int       @id @default(autoincrement())
  user        User    @relation(fields:[userId], references: [id])
  userId      Int
  post        Post    @relation(fields:[postId], references: [id])
  postId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id          Int       @default(autoincrement()) @id
  text        String
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  post        Post      @relation(fields: [postId], references: [id])
  postId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model File {
  id          Int       @default(autoincrement()) @id
  url         String
  post        Post      @relation(fields: [postId], references: [id])
  postId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Room {
  id              Int      @id @default(autoincrement())
  participants   User[]  
  messages       Message[]
}

model Message {
  id      Int     @id @default(autoincrement())
  text    String?
  from    User   @relation("MessageFrom", fields: [fromId], references: [id])
  to      User   @relation("MessageTo", fields: [toId], references: [id])   
  room    Room?
  fromId  Int
  toId    Int
}